#!/bin/bash -e

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
pushd $SCRIPT_DIR > /dev/null

PKGS=$(go list ./... | grep -v /vendor)
FORMATTABLE="$(find . -type f -name '*.go' -not -path './vendor/*' -not -path './binassets/*')"
LINT_EXCLUDE='(/vendor|binassets)'
LINTABLE=$(go list ./... | grep -v -E $LINT_EXCLUDE)

go test $PKGS -cover
go vet $PKGS

echo "Checking gofmt..."
fmtRes=$(gofmt -l $FORMATTABLE)
if [ -n "${fmtRes}" ]; then
  echo -e "gofmt checking failed:\n${fmtRes}"
  exit 2
fi

echo "Building golint..."
# We use golint locally, so build it for the local arch/os regardless of where our final bin will end up.
LOCALOS=$(go version | sed -n 's/^.* \([[:alnum:]]*\)\/\([[:alnum:]]*\)$/\1/p')
LOCALARCH=$(go version | sed -n 's/^.* \([[:alnum:]]*\)\/\([[:alnum:]]*\)$/\2/p')

GOOS=$LOCALOS GOARCH=$LOCALARCH CGO_ENABLED=0 \
    go build -o tools/golint ./vendor/github.com/golang/lint/golint

echo "Checking golint..."
lintRes=$(echo $LINTABLE | xargs -n 1 tools/golint)
if [ -n "${lintRes}" ]; then
  echo -e "golint checking failed:\n${lintRes}"
  exit 2
fi

popd > /dev/null
