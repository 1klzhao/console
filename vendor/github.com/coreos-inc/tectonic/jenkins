#!/bin/bash -e

# This script contains all jenkins work.
# This runs directly on the jenkins build host.
# The Jenkins build command should do nothing but execute this script.

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

export PUBLISH_RELEASE=${PUBLISH_RELEASE:=false}
export BUILD_ALL=${BUILD_ALL:=true}
CURRENT_USER=$(whoami)
CURRENT_UID=$(id -u $CURRENT_USER)
# We assume the jenkins jenkins user with uid 1000 on all build hosts
export BUILDER_RUN_USER=1000

if [ ${BUILDER_RUN_USER} -eq ${CURRENT_UID} ]; then
    echo "Running under User: ${CURRENT_USER}, with UID: ${CURRENT_UID}"
else
    echo "Expected to run with UID: ${BUILDER_RUN_USER}, instead UID is: ${CURRENT_UID}. Fix Jenkins and try again."
    exit 1
fi

if [ "$PUBLISH_RELEASE" = "true" ]; then
    echo "\$PUBLISH_RELEASE set to true, publishing tectonic-manager Docker image"
    "$DIR/scripts/publish_manager_image.sh"
    exit 0
else
    echo "\$PUBLISH_RELEASE not true, building as normal"
fi

export DOCKER_ENV=BUILD_ALL,PUBLISH_RELEASE
set -x

echo "cleaning..."
./builder-run ./clean
echo "building..."
./builder-run ./build
echo "testing..."
./builder-run ./test

GIT_SHA_HEAD=$(git rev-parse HEAD)
GIT_SHA_MASTER=$(git rev-parse origin/master)
if [ "$GIT_SHA_HEAD" == "$GIT_SHA_MASTER" ]; then
    echo "detected master build. building & pushing images..."
    ./push
else
    echo "skipping image push. HEAD sha does not appear to be master: $GIT_SHA_HEAD"
fi
